{"ast":null,"code":"import { HttpErrorResponse } from \"@angular/common/http\";\nimport { tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/auth.service\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(router, authService) {\n      this.router = router;\n      this.authService = authService;\n    }\n\n    intercept(request, next) {\n      return next.handle(request).pipe(tap(() => {}, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status !== 401) {\n            return;\n          }\n\n          this.authService.disconnect();\n          this.router.navigate([\"/auth/connect\"]);\n        }\n      }));\n    }\n\n  }\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}