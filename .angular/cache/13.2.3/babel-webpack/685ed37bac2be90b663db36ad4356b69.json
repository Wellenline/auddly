{"ast":null,"code":"import { BrowserModule, HammerModule } from \"@angular/platform-browser\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { LazyLoadImageModule } from \"ng-lazyload-image\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { HttpService } from \"./services/http.service\";\nimport { PlayerService } from \"./services/player.service\";\nimport { ServiceWorkerModule } from \"@angular/service-worker\";\nimport { environment } from \"../environments/environment\";\nimport { VirtualScrollerModule } from \"ngx-virtual-scroller\";\nimport { SwiperModule } from \"swiper/angular\";\nimport { DragScrollModule } from \"ngx-drag-scroll\";\nimport SwiperCore, { EffectCoverflow, Lazy, Virtual } from \"swiper/core\";\nimport { AuthInterceptor } from \"./interceptors/auth.interceptor\";\nimport { HammerGestureConfig, HAMMER_GESTURE_CONFIG } from \"@angular/platform-browser\";\nimport * as Hammer from \"hammerjs\";\nimport { SharedModule } from \"./shared/shared.module\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\";\nSwiperCore.use([Virtual, EffectCoverflow, Lazy]);\nexport let HammerConfig = /*#__PURE__*/(() => {\n  class HammerConfig extends HammerGestureConfig {\n    constructor() {\n      super(...arguments);\n      this.overrides = {\n        swipe: {\n          direction: Hammer.DIRECTION_ALL\n        },\n        pan: {\n          direction: Hammer.DIRECTION_VERTICAL\n        }\n      };\n    }\n\n  }\n\n  HammerConfig.ɵfac = /*@__PURE__*/function () {\n    let ɵHammerConfig_BaseFactory;\n    return function HammerConfig_Factory(t) {\n      return (ɵHammerConfig_BaseFactory || (ɵHammerConfig_BaseFactory = i0.ɵɵgetInheritedFactory(HammerConfig)))(t || HammerConfig);\n    };\n  }();\n\n  HammerConfig.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HammerConfig,\n    factory: HammerConfig.ɵfac\n  });\n  return HammerConfig;\n})();\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [HttpService, PlayerService, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }, {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: HammerConfig\n    }],\n    imports: [[BrowserModule, HttpClientModule, ReactiveFormsModule, // SharedModule,\n    SharedModule, FormsModule, CommonModule, SwiperModule, DragScrollModule, HammerModule, LazyLoadImageModule, AppRoutingModule, VirtualScrollerModule, ServiceWorkerModule.register(\"ngsw-worker.js\", {\n      enabled: environment.production\n    })]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}