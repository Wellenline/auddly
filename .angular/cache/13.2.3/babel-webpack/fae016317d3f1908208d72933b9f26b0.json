{"ast":null,"code":"import { IStorageStrategy } from './IStorageStrategy';\nexport class InMemoryStorageStrategy extends IStorageStrategy {\n  constructor() {\n    super(...arguments);\n    this.cachePairs = [];\n  }\n\n  add(cachePair, cacheKey, ctx) {\n    this.cachePairs.push(cachePair);\n  }\n\n  addMany(cachePairs) {\n    this.cachePairs = cachePairs;\n  }\n\n  updateAtIndex(index, entity) {\n    const updatee = this.cachePairs[index];\n    Object.assign(updatee, entity);\n  }\n\n  update(index, entity) {\n    const updatee = this.cachePairs[index];\n    Object.assign(updatee, entity);\n  }\n\n  getAll() {\n    return this.cachePairs;\n  }\n\n  removeAtIndex(index) {\n    this.cachePairs.splice(index, 1);\n  }\n\n  remove(index) {\n    this.cachePairs.splice(index, 1);\n  }\n\n  removeAll() {\n    this.cachePairs.length = 0;\n  }\n\n} //# sourceMappingURL=InMemoryStorageStrategy.js.map","map":null,"metadata":{},"sourceType":"module"}