{"ast":null,"code":"import { ComponentPortal } from '@angular/cdk/portal';\nimport { InjectionToken, Injector } from '@angular/core';\nimport { ToastComponent } from './toast.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/overlay\";\nexport let ToastService = /*#__PURE__*/(() => {\n  class ToastService {\n    constructor(overlay) {\n      this.overlay = overlay;\n    }\n\n    show(data) {\n      /*const config = new OverlayConfig();\n      const positionStrategy = this.overlay.position()\n          .global().centerVertically().centerHorizontally();\n      config.positionStrategy = positionStrategy;*/\n      let overlayRef = this.overlay.create({\n        //hasBackdrop: true,\n        //backdropClass: \"cdk-overlay-backdrop\",\n        //scrollStrategy: this.overlay.scrollStrategies.close(),\n        positionStrategy: this.overlay.position().global().centerHorizontally().bottom()\n      });\n      console.log(\"HERE\");\n      const inject = Injector.create({\n        providers: [{\n          provide: ToastRef,\n          useValue: overlayRef\n        }, {\n          provide: ToastConfig,\n          useValue: data\n        }]\n      });\n      console.log(inject.get(ToastRef));\n      let partal = new ComponentPortal(ToastComponent, null, inject);\n      overlayRef.attach(partal);\n      /*setTimeout(() => {\n          overlayRef.detach()\n          overlayRef.dispose();\n      }, 2000);*/\n    }\n\n  }\n\n  ToastService.ɵfac = function ToastService_Factory(t) {\n    return new (t || ToastService)(i0.ɵɵinject(i1.Overlay));\n  };\n\n  ToastService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ToastService,\n    factory: ToastService.ɵfac,\n    providedIn: 'root'\n  });\n  return ToastService;\n})();\nexport const ToastRef = new InjectionToken('ToastRef');\nexport const ToastConfig = new InjectionToken('ToastConfig');","map":null,"metadata":{},"sourceType":"module"}