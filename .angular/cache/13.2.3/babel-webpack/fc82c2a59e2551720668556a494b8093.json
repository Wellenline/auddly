{"ast":null,"code":"import { AlbumComponent } from \"../album/album.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/components/modal/modal.component\";\nimport * as i2 from \"src/app/shared/components/toast/toast.service\";\nimport * as i3 from \"src/app/services/player.service\";\nimport * as i4 from \"src/app/core/services/music.service\";\nimport * as i5 from \"src/app/shared/components/modal/modal.service\";\nimport * as i6 from \"../../../../shared/components/header/header.component\";\nexport let ArtistComponent = /*#__PURE__*/(() => {\n  class ArtistComponent {\n    constructor(modal, toastService, playerService, musicService, modalService) {\n      this.modal = modal;\n      this.toastService = toastService;\n      this.playerService = playerService;\n      this.musicService = musicService;\n      this.modalService = modalService;\n      this.artist = {};\n      this.albums = [];\n      this.tracks = [];\n      this.loading = true;\n      this.result = {\n        albums: [],\n        tracks: [],\n        artists: [],\n        playlists: []\n      };\n    }\n\n    ngOnInit() {\n      this.getData(this.modal.params.id);\n    }\n\n    getData(id) {\n      this.getArtist(id);\n      this.getAlbums(id);\n      this.getPopular(id);\n    }\n\n    getArtist(id) {\n      this.loading = true;\n      this.musicService.getArtist(id).subscribe(response => {\n        this.artist = response;\n        this.getSearchResults(this.artist.name);\n      }, err => {\n        console.log(err);\n      }).add(() => {\n        this.loading = false;\n      });\n    }\n\n    getAlbums(id) {\n      this.loading = true;\n      this.musicService.getAlbums({\n        artist: id\n      }).subscribe(response => {\n        this.albums = response.albums;\n      }, err => {\n        console.log(err);\n      }).add(() => {\n        this.loading = false;\n      });\n    }\n\n    getPopular(id) {\n      this.loading = true;\n      this.musicService.getTracks({\n        popular: true,\n        artist: id,\n        limit: 10\n      }).subscribe(response => {\n        this.tracks = response.tracks;\n      }, err => {\n        console.log(err);\n      }).add(() => {\n        this.loading = false;\n      });\n    }\n\n    onPlayTracks() {\n      if (this.tracks.length > 0) {\n        this.playerService.onPlay(...this.tracks);\n      }\n    }\n\n    getSearchResults(search) {\n      if (search.length < 3) {\n        return;\n      }\n\n      this.musicService.search(search).subscribe(response => {\n        this.result = response;\n      }, err => {\n        console.log(err);\n      }).add(() => {\n        this.loading = false;\n      });\n    }\n\n    onAlbum(id) {\n      this.modalService.show({\n        component: AlbumComponent,\n        class: \"fullscreen\",\n        params: {\n          id\n        }\n      });\n    }\n\n  }\n\n  ArtistComponent.ɵfac = function ArtistComponent_Factory(t) {\n    return new (t || ArtistComponent)(i0.ɵɵdirectiveInject(i1.ModalComponent), i0.ɵɵdirectiveInject(i2.ToastService), i0.ɵɵdirectiveInject(i3.PlayerService), i0.ɵɵdirectiveInject(i4.MusicService), i0.ɵɵdirectiveInject(i5.ModalService));\n  };\n\n  ArtistComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ArtistComponent,\n    selectors: [[\"app-artist\"]],\n    decls: 2,\n    vars: 4,\n    consts: [[3, \"back\", \"backPreventDefault\", \"sticky\", \"transparent\", \"onClose\"], [1, \"container\"]],\n    template: function ArtistComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-header\", 0);\n        i0.ɵɵlistener(\"onClose\", function ArtistComponent_Template_app_header_onClose_0_listener() {\n          return ctx.modal.onClose();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(1, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"back\", true)(\"backPreventDefault\", true)(\"sticky\", true)(\"transparent\", true);\n      }\n    },\n    directives: [i6.HeaderComponent],\n    styles: [\"\"]\n  });\n  return ArtistComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}