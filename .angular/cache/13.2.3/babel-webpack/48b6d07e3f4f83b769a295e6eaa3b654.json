{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport let InterfaceService = /*#__PURE__*/(() => {\n  class InterfaceService {\n    constructor() {\n      this.queue = [];\n      this.tooltip$ = new BehaviorSubject(false);\n      this.dialog = {\n        visible: false,\n        status$: new BehaviorSubject(false),\n        options: {\n          cancelButtonText: \"Cancel\",\n          okButtonText: \"Ok\",\n          type: \"alert\"\n        },\n        show: options => {\n          this.dialog.options = Object.assign(this.dialog.options, options);\n          this.dialog.visible = true;\n          this.dialog.status$.next(true);\n        },\n        close: status => {\n          this.dialog.visible = false;\n          this.dialog.status$.next(false);\n          this.dialog.options.default = \"\";\n\n          if (this.dialog.options.closed) {\n            this.dialog.options.closed(status);\n          }\n        }\n      };\n    }\n\n    notify(message, options = {\n      timeout: 3000\n    }) {\n      this.queue.push(message);\n      setTimeout(() => {\n        this.dismiss();\n      }, options.timeout);\n    }\n\n    dismiss(index) {\n      this.queue.splice(index || 0, 1); // this.visible = false;\n    }\n\n  }\n\n  InterfaceService.ɵfac = function InterfaceService_Factory(t) {\n    return new (t || InterfaceService)();\n  };\n\n  InterfaceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InterfaceService,\n    factory: InterfaceService.ɵfac,\n    providedIn: \"root\"\n  });\n  return InterfaceService;\n})();","map":null,"metadata":{},"sourceType":"module"}