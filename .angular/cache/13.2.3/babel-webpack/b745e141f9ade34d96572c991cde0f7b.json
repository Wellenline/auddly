{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { Cacheable, LocalStorageStrategy } from \"ts-cacheable\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./http.service\";\nexport class MusicService {\n  constructor(http) {\n    this.http = http;\n    this.artists = new BehaviorSubject([]);\n    this.albums = new BehaviorSubject([]);\n    this.playlists = new BehaviorSubject([]);\n    this.tracks = new BehaviorSubject([]);\n  }\n\n  getPlaylists() {\n    return this.http.get(`/playlists`);\n  }\n\n  getArtists(params) {\n    return this.http.get(`/artists?${Object.keys(params).map(key => key + \"=\" + params[key]).join(\"&\")}`);\n  }\n\n  getArtist(id) {\n    return this.http.get(`/artists/${id}`);\n  }\n\n  getAlbums(params) {\n    return this.http.get(`/albums?${Object.keys(params).map(key => key + \"=\" + params[key]).join(\"&\")}`);\n  }\n\n  getAlbum(id) {\n    return this.http.get(`/albums/${id}`);\n  }\n\n  getTracks(params) {\n    return this.http.get(`/tracks?${Object.keys(params).map(key => key + \"=\" + params[key]).join(\"&\")}`);\n  }\n\n  search(query) {\n    return this.http.get(`/search?q=${query}`);\n  }\n\n}\n\nMusicService.ɵfac = function MusicService_Factory(t) {\n  return new (t || MusicService)(i0.ɵɵinject(i1.HttpService));\n};\n\nMusicService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MusicService,\n  factory: MusicService.ɵfac,\n  providedIn: \"root\"\n});\n\n__decorate([Cacheable({\n  storageStrategy: LocalStorageStrategy\n})], MusicService.prototype, \"getArtist\", null);\n\n__decorate([Cacheable({\n  storageStrategy: LocalStorageStrategy\n})], MusicService.prototype, \"getAlbum\", null);\n\n__decorate([Cacheable({\n  storageStrategy: LocalStorageStrategy\n})], MusicService.prototype, \"getTracks\", null);","map":null,"metadata":{},"sourceType":"module"}