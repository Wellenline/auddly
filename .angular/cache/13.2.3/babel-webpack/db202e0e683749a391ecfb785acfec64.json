{"ast":null,"code":"import { isPlatformBrowser } from \"@angular/common\";\nimport { EventEmitter, PLATFORM_ID } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"anchor\"];\nconst _c1 = [\"*\"];\nexport let InfiniteScrollComponent = /*#__PURE__*/(() => {\n  class InfiniteScrollComponent {\n    constructor(platformId, host) {\n      this.platformId = platformId;\n      this.host = host;\n      this.options = {};\n      this.scrolled = new EventEmitter();\n    }\n\n    get element() {\n      return this.host.nativeElement;\n    }\n\n    ngOnInit() {\n      if (isPlatformBrowser(this.platformId)) {\n        const options = Object.assign({\n          root: this.isHostScrollable() ? this.host.nativeElement : null\n        }, this.options);\n        this.observer = new IntersectionObserver(([entry]) => {\n          // console.log(entry);\n          return entry.isIntersecting && this.scrolled.emit();\n        }, options);\n        this.observer.observe(this.anchor.nativeElement);\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.observer) {\n        this.observer.disconnect();\n      }\n    }\n\n    isHostScrollable() {\n      const style = window.getComputedStyle(this.element);\n\n      if (style) {\n        return style.getPropertyValue(\"overflow\") === \"auto\" || style.getPropertyValue(\"overflow-y\") === \"scroll\";\n      }\n    }\n\n  }\n\n  InfiniteScrollComponent.ɵfac = function InfiniteScrollComponent_Factory(t) {\n    return new (t || InfiniteScrollComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  InfiniteScrollComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InfiniteScrollComponent,\n    selectors: [[\"app-infinite-scroll\"]],\n    viewQuery: function InfiniteScrollComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.anchor = _t.first);\n      }\n    },\n    inputs: {\n      options: \"options\"\n    },\n    outputs: {\n      scrolled: \"scrolled\"\n    },\n    ngContentSelectors: _c1,\n    decls: 3,\n    vars: 0,\n    consts: [[\"anchor\", \"\"]],\n    template: function InfiniteScrollComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵelement(1, \"div\", null, 0);\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{display:block}\"]\n  });\n  return InfiniteScrollComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}