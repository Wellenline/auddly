{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\";\nimport * as i2 from \"../modules/shared/services/interface.service\";\nexport let UpdateService = /*#__PURE__*/(() => {\n  class UpdateService {\n    constructor(swUpdate, interfaceService) {\n      this.swUpdate = swUpdate;\n      this.interfaceService = interfaceService;\n      console.log(\"Subscribing to app updates\");\n      this.swUpdate.available.subscribe(evt => {\n        this.interfaceService.dialog.show({\n          type: \"confirm\",\n          okButtonText: \"Reload\",\n          cancelButtonText: \"Cancel\",\n          title: \"New Version\",\n          message: \"There's a new update available\",\n          closed: success => {\n            if (success) {\n              window.location.reload();\n            }\n          }\n        });\n      });\n    }\n\n  }\n\n  UpdateService.ɵfac = function UpdateService_Factory(t) {\n    return new (t || UpdateService)(i0.ɵɵinject(i1.SwUpdate), i0.ɵɵinject(i2.InterfaceService));\n  };\n\n  UpdateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UpdateService,\n    factory: UpdateService.ɵfac,\n    providedIn: \"root\"\n  });\n  return UpdateService;\n})();","map":null,"metadata":{},"sourceType":"module"}