.library {
	// grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
	overflow: hidden;
	display: grid;

	grid-template-columns: repeat(auto-fit, minmax(170px, 1fr));
	gap: 10px;

	margin-top: 65px;
	.column {
		// width: 170px;
		// height: 170px;
		margin: 0 auto;

		position: relative;
		img {
			object-fit: cover;
			width: 170px;
			height: 170px;
			border-radius: 5px;
			box-shadow: rgba(17, 17, 18, 0.04) 0 2px 4px, rgba(19, 20, 20, 0.06) 0 1px 1px;
		}

		&-name {
			position: absolute;
			color: white;
			text-align: center;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
			font-weight: 500;
			font-size: 1rem;
			// text-shadow: 0px 0px 8px black;
			background-color: black;
			padding: 5px;
		}

		&-details {
			// position: absolute;
			bottom: 0;
			padding-top: 10px;
			padding-bottom: 10px;
			.title {
				color: var(--foreground-color);
				font-size: 14px;
			}

			.subtitle {
				color: var(--foreground-color);
				opacity: 0.7;
				font-size: 12px;
			}
		}

		&-overlay {
			// background: #3838388f;

			background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(0, 0, 0, 85%));
			top: 0;
			// backdrop-filter: blur(0.5px);
			position: absolute;
			width: 100%;
			height: 100%;
			border-radius: 5px;
		}
	}
}

@media all and (max-width: 1000px) {
	.library {
	}
}

.toggle {
	position: fixed;
	background-color: var(--background-color);
	padding: 15px;
	border-radius: 0px;
	display: flex;
	flex-direction: row;
	zoom: 1;
	width: 100%;
	z-index: 6;
	box-shadow: 0 2px 4px rgb(17 17 18 / 4%), 0 1px 1px rgb(19 20 20 / 6%);
	left: 0;
	&:before,
	&:after {
		content: " "; /* 1 */
		display: table; /* 2 */
	}
	&:after {
		clear: both;
	}

	span {
		position: absolute;
		background-color: var(--border-color);
		width: calc(50% - 5px);
		height: calc(100% - 10px);
		border-radius: 5px;
		transition: all 200ms ease;
		top: 5px;

		&.left {
			left: 5px;
		}
		&.right {
			left: 50%;
		}
	}
	.value {
		flex-grow: 1;
		text-align: center;
		flex-basis: 0;
		z-index: 2;
		color: var(--foreground-color);

		&:hover {
			cursor: pointer;
		}

		&.active {
			color: var(--foreground-color);
		}
	}
}
